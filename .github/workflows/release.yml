name: Build and Release

# Specifies the event that triggers the workflow.
on:
  push:
    branches:
      - main

jobs:
  build:
    # Specifies the type of runner that the job will run on.
    runs-on: ubuntu-latest

    steps:
    # Checks out the repository under $GITHUB_WORKSPACE, so the workflow can access it.
    - name: Checkout Code
      uses: actions/checkout@v2

    # Uses the provided action to get the current date and time in the desired format.
    - name: Get Current Time
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDDHHmm
        utcOffset: "+08:00"

    # Sets up a .NET 7 environment for the subsequent steps.
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    # Restores the dependencies of the .NET project.
    - name: Restore Dependencies
      run: dotnet restore

    # Builds the .NET project in Release configuration without restoring dependencies.
    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Publishes the .NET project to the `./out` directory without building.
    - name: Publish
      run: dotnet publish --configuration Release --no-build -o ./out

    # Creates a new release on GitHub using the current date and time and uploads the built DLL.
    - name: Release and Upload DLL
      uses: softprops/action-gh-release@v1
      with:
        tag_name: release/${{ steps.current-time.outputs.formattedTime }}
        name: release_${{ steps.current-time.outputs.formattedTime }}
        files: ./out/GodotSharper.dll
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
